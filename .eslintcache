[{"C:\\Users\\ve\\react-projects\\Calendar_App_with_React\\src\\index.js":"1","C:\\Users\\ve\\react-projects\\Calendar_App_with_React\\src\\App.js":"2","C:\\Users\\ve\\react-projects\\Calendar_App_with_React\\src\\Component\\CalenderOuterLayout.jsx":"3","C:\\Users\\ve\\react-projects\\Calendar_App_with_React\\src\\Component\\CalendarGeneratingComponent.jsx":"4"},{"size":176,"mtime":1608886008034,"results":"5","hashOfConfig":"6"},{"size":452,"mtime":1609566530152,"results":"7","hashOfConfig":"6"},{"size":6445,"mtime":1609421701389,"results":"8","hashOfConfig":"6"},{"size":5376,"mtime":1609511861344,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"b4coq8",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"C:\\Users\\ve\\react-projects\\Calendar_App_with_React\\src\\index.js",[],["21","22"],"C:\\Users\\ve\\react-projects\\Calendar_App_with_React\\src\\App.js",[],"C:\\Users\\ve\\react-projects\\Calendar_App_with_React\\src\\Component\\CalenderOuterLayout.jsx",["23","24"],"import React, {useState} from 'react';\r\nimport CalendarGeneratingComponent from './CalendarGeneratingComponent';\r\n\r\nconst CalenderOuterLayout = () => {\r\n    // var [previousNoOfToMonthDisplay,setpreviousNoOfToMonthDisplay] =useState(0);\r\n    var valueOfPreviousMonthDisplay = 0;\r\n    var limitOfPreviousMonthDisplay = 1;\r\n    // var previousNoOfMonthDisplay = 0;\r\n    var [previousNoOfMonthDisplay,setPreviousNoOfToMonthDisplay] =useState(0);\r\n    var limitOfNextMonthDisplay = 1;\r\n    var [nextNoOfMonthDisplay,setNextNoOfMonthDisplay] = useState(0);\r\n    var initialDateObject = new Date();\r\n    // var currentDateObjectValue = `${initialDateObject.getFullYear()}-${initialDateObject.getMonth()+1}-${1}`;\r\n    var [currentDateObjectValue,setCurrentDateObjectValue] = useState(`${initialDateObject.getFullYear()}-${initialDateObject.getMonth()+1}-${1}`);\r\n    var currentDateObject = new Date(currentDateObjectValue);\r\n    var variableDateObjectValue ;\r\n    // var variableDateObject = new Date(variableDateObjectValue);\r\n    console.log(previousNoOfMonthDisplay);\r\n    var nextNoOfToMonthDisplay = 2;    \r\n    var dateObjectValue;\r\n    var handlingLeftArrow=()=> {\r\n        // console.log(previousNoOfToMonthDisplay);\r\n        console.log(\"i am left arrow\");\r\n        // var decreasingLimitedYearVariableInleftArrow = initialDateObject.getFullYear();\r\n        var decreasingLimitedMonthVariableInleftArrow = initialDateObject.getMonth()+1;\r\n        if (decreasingLimitedMonthVariableInleftArrow === 1) {\r\n            decreasingLimitedMonthVariableInleftArrow = 12; \r\n        }\r\n        if ((\r\n            // (initialDateObject.getMonth()+1)-limitOfPreviousMonthDisplay\r\n            decreasingLimitedMonthVariableInleftArrow-limitOfPreviousMonthDisplay\r\n            )===(currentDateObject.getMonth()+1)) {\r\n            console.log(\"you are not have access to view the previous month\");\r\n        }\r\n        // if (previousNoOfMonthDisplay < limitOfPreviousMonthDisplay) {\r\n            else{\r\n            console.log(\"BEFORE\",previousNoOfMonthDisplay);\r\n            console.log(\"currentDateObjectValue\",currentDateObjectValue);\r\n            setPreviousNoOfToMonthDisplay(previousNoOfMonthDisplay += 1);\r\n            // previousNoOfMonthDisplay +=1;\r\n            var decreasingYearVariableInleftArrow = currentDateObject.getFullYear();\r\n            var decreasingMonthVariableInleftArrow = currentDateObject.getMonth()+1;\r\n            if (decreasingMonthVariableInleftArrow === 1) {\r\n                decreasingMonthVariableInleftArrow = 12; \r\n                decreasingYearVariableInleftArrow -= 1;\r\n                dateObjectValue = `${decreasingYearVariableInleftArrow}-${(decreasingMonthVariableInleftArrow)}-${1}`;\r\n            }else{\r\n                dateObjectValue = `${decreasingYearVariableInleftArrow}-${(decreasingMonthVariableInleftArrow)-1}-${1}`;\r\n            }\r\n            // currentDateObjectValue = dateObjectValue;\r\n            // var temp  = currentDateObject.getFullYear();\r\n            // console.log(typeof temp);\r\n            setCurrentDateObjectValue(dateObjectValue);\r\n            console.log(\"dateobjectvalue\",dateObjectValue);\r\n            console.log(\"currentDateObjectValue\",currentDateObjectValue);\r\n            console.log(\"AFTER\",previousNoOfMonthDisplay);\r\n        }\r\n        // console.log(\"currentDateObjectValue\",currentDateObjectValue);\r\n    }\r\n    \r\n    // console.log(variableDateObject.getFullYear());\r\n    var handlingRightArrow=()=> {\r\n        console.log(\"i am right arrow\");\r\n        // console.log(\"variablesateobject\",variableDateObject);\r\n        var increasingLimitedMonthVariableInleftArrow = initialDateObject.getMonth()+1;\r\n        if (increasingLimitedMonthVariableInleftArrow === 12) {\r\n            increasingLimitedMonthVariableInleftArrow = 1; \r\n        }\r\n        if (((\r\n            // (initialDateObject.getMonth()+1)+limitOfNextMonthDisplay\r\n            (increasingLimitedMonthVariableInleftArrow+limitOfNextMonthDisplay)\r\n                 )===(currentDateObject.getMonth()+1))) {\r\n            console.log(\"you are not have access to view the previous month\");\r\n        }\r\n        // if (nextNoOfMonthDisplay < limitOfNextMonthDisplay) {\r\n            else{\r\n            console.log(\"BEFORE\",nextNoOfMonthDisplay);\r\n            console.log(\"currentDateObjectValue\",currentDateObjectValue);\r\n            setNextNoOfMonthDisplay(nextNoOfMonthDisplay += 1);\r\n            // nextNoOfMonthDisplay +=1;            \r\n            var increasingYearVariableInRightArrow = currentDateObject.getFullYear();\r\n            var increasingMonthVariableInRightArrow = currentDateObject.getMonth()+1;\r\n            if (increasingMonthVariableInRightArrow === 12) {  \r\n                increasingMonthVariableInRightArrow = 1;\r\n                increasingYearVariableInRightArrow += 1;               \r\n                variableDateObjectValue = `${increasingYearVariableInRightArrow}-${(increasingMonthVariableInRightArrow)}-${1}`;    \r\n            } else {\r\n                variableDateObjectValue = `${increasingYearVariableInRightArrow}-${(increasingMonthVariableInRightArrow)+1}-${1}`;\r\n            }\r\n            // currentDateObjectValue = variableDateObjectValue;\r\n            setCurrentDateObjectValue(variableDateObjectValue);\r\n            console.log(\"variableDateObjectValue\",variableDateObjectValue);\r\n            console.log(\"currentDateObjectValue\",currentDateObjectValue);\r\n            console.log(\"AFTER\",nextNoOfMonthDisplay);\r\n        }\r\n        // console.log(\"currentDateObjectValue\",currentDateObjectValue);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <section>\r\n                <article>                    \r\n                    <div className=\"doubleArrowsButton\">\r\n                        <button className=\"leftArrow\" onClick={handlingLeftArrow}>\r\n                            <i className=\"fas fa-arrow-left\"></i>\r\n                        </button>\r\n                        <div className=\"calendarDisplay\">\r\n                         <CalendarGeneratingComponent calendarGeneratingDate={currentDateObjectValue}/> \r\n                        </div>\r\n                        <button className=\"rightArrow\" onClick={handlingRightArrow}>\r\n                            <i className=\"fas fa-arrow-right\"></i>\r\n                        </button>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CalenderOuterLayout;\r\n","C:\\Users\\ve\\react-projects\\Calendar_App_with_React\\src\\Component\\CalendarGeneratingComponent.jsx",["25","26"],"import React, { Fragment, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst CalendarGeneratingComponent = (props) => {\r\n    // var a=\"2020-10-01\";\r\n    var [datesUniqueId,setdatesUniqueId] = useState(\"\");\r\n    var calendarGeneratingDate = props.calendarGeneratingDate;\r\n    console.log(uuidv4());\r\n    console.log(uuidv4());\r\n    console.log(uuidv4());\r\n    var date = new Date(calendarGeneratingDate);\r\n    var month = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\r\n    var week = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\r\n    var lastDateInTheFirstWeek = week.length-monthStarts();\r\n    var firstDateOfMonth = 1;\r\n    var noOfDaysInMonth = CalculatingNoOfDaysInMonth(date.getMonth()); \r\n    console.log(noOfDaysInMonth);\r\n    var spaces;\r\n    var dateIncreament = lastDateInTheFirstWeek;\r\n    var emptyArray = new Array(monthStarts());\r\n    for (let index = 0; index < emptyArray.length; index++) {\r\n        emptyArray[index] = \" \";\r\n    }\r\n    var datesArray = new Array(lastDateInTheFirstWeek);\r\n    for (let index = 0; index < datesArray.length; index++) {\r\n        datesArray[index] = index + 1;\r\n    }\r\n    var lastFiveColumnArray = new Array(5);\r\n    for (let index = 0; index < lastFiveColumnArray.length; index++) {\r\n        lastFiveColumnArray[index] = \" \";\r\n    }\r\n    \r\n\r\n    function CalculatingNoOfDaysInMonth(index = index+1) {\r\n            switch(month[index]){\r\n                case \"Jan\": case \"Mar\": case \"May\": case \"Jul\":\r\n                case \"Aug\": case \"Oct\": case \"Dec\":  return 31;\r\n                \r\n                case \"Apr\": case \"Jun\": case \"Sep\":\r\n                case \"Nov\": return 30;\r\n                      \r\n                case \"Feb\" : return 28;\r\n                      \r\n                default: \r\n                console.log(\"Problem with Logic in month calculations\",`${month[index]}`);  \r\n                break;    \r\n            }\r\n    }\r\n\r\n    // var [datesUniqueId,setdatesUniqueId] = useState(1);\r\n\r\n    function monthStarts() {\r\n        var date2 = new Date(`${date.getFullYear()}-${date.getMonth()+1}-${1}`)\r\n        spaces = date2.getDay();\r\n        console.log(spaces);\r\n        return spaces;\r\n    }\r\n\r\n    var handleButtonClick=(e) => {\r\n        console.log(typeof e.target.id);\r\n        console.log(e.target.innerHTML,\"hi i am working\");\r\n        var tempVar = e.target.id;\r\n        setdatesUniqueId(tempVar);\r\n        console.log(\"i am updated\",datesUniqueId);\r\n        console.log(datesUniqueId);\r\n    }\r\n\r\n    function handleSelection(e){\r\n        e.preventDefault();\r\n        console.log(\"empty\");\r\n        console.log(\"i am form after submission\",datesUniqueId);\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <Fragment>\r\n            <section>\r\n                <article>\r\n                    <header id=\"calendarHeader\">\r\n                        <div>\r\n                           {month[date.getMonth()]}\r\n                        </div>\r\n                        <div>\r\n                            {date.getFullYear()}\r\n                        </div>\r\n                    </header>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                            {week.map((currentValue) => (\r\n                                <th>{currentValue}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                {emptyArray.map((currentValue) => (\r\n                                <td id={uuidv4()}>{currentValue}</td>\r\n                                ))}\r\n                                {datesArray.map((currentValue) => (\r\n                                <td><button id={uuidv4()} onClick={handleButtonClick}>{currentValue}</button></td>\r\n                                ))}\r\n                            </tr>\r\n                            {lastFiveColumnArray.map(() => (\r\n                                <tr>{week.map(() => (\r\n                                        <td>{dateIncreament >=(noOfDaysInMonth) ? \" \"  :\r\n                                        <button id={uuidv4()} onClick={handleButtonClick}>{(dateIncreament+=1)}</button>}</td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </article>\r\n            </section>\r\n            <section>\r\n                <article>\r\n                    <div>\r\n                        {datesUniqueId+\"check\"}\r\n                        <form onSubmit={handleSelection}>\r\n                        <select name=\"attendance\" id=\"attendance\">\r\n                            <option value=\"selectAttendance\">--SELECT ATTENDANCE--</option>\r\n                            <option value=\"present\">Present</option>\r\n                            <option value=\"leave\">Leave</option>\r\n                            <option value=\"weekoff\">W/O</option>\r\n                            <option value=\"holiday\">Holiday</option>\r\n                        </select>\r\n                        <input type=\"submit\"/>\r\n                        </form>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CalendarGeneratingComponent;\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":6,"column":9,"nodeType":"33","messageId":"34","endLine":6,"endColumn":36},{"ruleId":"31","severity":1,"message":"35","line":19,"column":9,"nodeType":"33","messageId":"34","endLine":19,"endColumn":31},{"ruleId":"31","severity":1,"message":"36","line":15,"column":9,"nodeType":"33","messageId":"34","endLine":15,"endColumn":25},{"ruleId":"37","severity":1,"message":"38","line":34,"column":49,"nodeType":"33","messageId":"39","endLine":34,"endColumn":54},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'valueOfPreviousMonthDisplay' is assigned a value but never used.","Identifier","unusedVar","'nextNoOfToMonthDisplay' is assigned a value but never used.","'firstDateOfMonth' is assigned a value but never used.","no-use-before-define","'index' was used before it was defined.","usedBeforeDefined","no-global-assign","no-unsafe-negation"]